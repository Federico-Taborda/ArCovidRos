swagger: "2.0"
info:
  description: "API pública para la consulta de almacenes cercanos"
  version: "0.1.0"
  title: "Almacenes API"
  contact:
    email: "info@hackfunrosario.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "almacenes.hackfunrosario.com"
basePath: "/api"
schemes:
- "https"
paths:
  /almacenes:
    get:
      tags:
        - "almacenes"
  /almacenes/almacen:
    post:
      tags:
        - "almacenes"
  /almacenes/findAlmacenesByBarrio/{idBarrio}:
    get:
      tags:
        - "almacenes"
  /almacenes/findAlmacenesNearMe:
    get:
      tags:
        - "almacenes"
  /almacenes/whereInBarrioDistrito:
    get:
      tags:
        - "consultas"
  /almacenes/barrios:
    get:
      tags:
        - "barrios"
  /almacenes/barrio:
    post:
      tags:
        - "barrios"
  /auth/registerUser:
    post:
      tags:
      - "auth"
      summary: "Registro de un usuario nuevo"
      produces:
      - "application/json"
      parameters:
      - name: "admin-key"
        in: "header"
        type: "string"
        required: true
        description: "Admin Key necesaria para crear usuarios"
      - name: "body"
        in: "body"
        schema:
          type: "object"
          properties:
            username:
              type: "string"
            email:
              type: "string"
            password:
              type: "string"
            name:
              type: "string"
            admin:
              type: "boolean"              
      responses:
        200:
          description: "JWT Token"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                default: "true"
              data:
                type: "object"
                example: "Usuario creado"
        400:
          description: "Datos inválidos"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                default: "false"
              error:
                type: "string"
                example: "Es necesario cargar los datos para guardar."
        403:
          description: "No tiene permisos para crear usuarios"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                default: false
              error:
                type: "string"
                default: "Forbidden"
  /auth/signIn:
    post:
      tags:
      - "auth"
      summary: "Logueo de un usuario"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        schema:
          type: "object"
          properties:
            username:
              type: "string"
            password:
              type: "string"
      responses:
        200:
          description: "JWT Token"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                default: "true"
              token:
                type: "string"
              expire:
                type: "integer"
                example: "1440"
        403:
          description: "Datos inválidos"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                default: "false"
              error:
                type: "string"
                default: "Forbidden"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
        description: "Nombre"
      lastName:
        type: "string"
        description: "Apellido"
      email:
        type: "string"
        format: "email"
        description: "Correo del usuario"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "Estado del usuario"
    xml:
      name: "User"
              
  Barrio:
    type: "object"
    description: "Definición de un barrio"
    properties:
      _id: 
        type: "string"
        example: "5e77787d9d388471919abc70"
        description: "Id del registro"
      mslink:
        type: "number"
        description: "Parámetro heredado de los datos de la Municipalidad de Rosario"
        example: 10
      barrio:
        type: "string"
        description: "Nombre del barrio"
        example: "Pichincha"
      geojson:
        description: "geoJSON correspondiente al polígono del barrio"
        $ref: '#/definitions/polygonSchema'

  Distrito:
    type: "object"
    description: "Definición de un distrito"
    properties:
      _id: 
        type: "string"
        example: "5e77787d9d388471919abc70"
        description: "Id del registro"
      distrito:
        type: "string"
        description: "Distrito de rosario"
        example: "RUR"
      observacion:
        type: "string"
        description: "Nombre del distrito"
        example: "Rosa Ziperovich"
      geojson:
        description: "geoJSON correspondiente al polígono del distrito"
        $ref: '#/definitions/polygonSchema'        

  Almacen:
    type: "object"
    properties:
      _id:
        type: "string"
        example: "5e77787d9d388471919abc70"
        description: "Id del registro"
      nombre:
        type: "string"
        example: "La Esquina - Bravi, Celia Cristina"
        description: "Nombre del almacén"
      direccion:
        type: "string"
        example: "Laprida 3102, 2000, Rosario, Santa Fe"
        description: "Dirección del almacén"
      descripcion:
        type: "string"
        example: "Datos extras"
      tipo_comercio:
        description: "Rubros del comercio"
        type: "string"
        example: "Almacén, Limpieza, Bazar"
      telefono:
        description: "Teléfonos de contacto"
        type: "array"
        items:
          type: "string"
          example: "123456789"
      whatsapp:
        description: "Whatsapp de contacto"
        type: "array"
        items:
          type: "string"
          example: "123456789"     
      barrio:
        description: "Barrio obtenido de los barrios de la base de datos"
        type: "string"
        example: "Pichincha"
      distrito:
        description: "Distrito obtenido de los barrios de la base de datos"
        type: "string"
        example: "SUR (Rosa Ziperovich)"
      geojson:
        description: "geoJSON correspondiente al punto en el mapa"
        $ref: '#/definitions/pointSchema'
      extras:
        type: "array"
        items:
          $ref: '#/definitions/extraData'
      createdAt:
        type: "string"
        example: "2020-03-22T14:38:53.524Z"
        description: "Fecha de creación del registro, en formato RFC3339 §5.6"
      updatedAt:
        type: "string"
        example: "2020-03-22T14:38:53.524Z"
        description: "Fecha de actualización del registro, en formato RFC3339 §5.6"

  extraData:
    type: "object"
    description: "Información extra de un almacén"
    properties:
      _id: 
        type: "string"
        example: "5e77787d9d388471919abc70"
        description: "Id del registro"
      nombre:
        type: "string"
        example: "Alimentar"
      tipo:
        type: "string"
        example: "link"
      valor:
        type: "string"
        example: "http://alsa..."

  pointSchema:
    type: "object"
    description: "Definición geoJSON para un punto"
    properties:
      _id: 
        type: "string"
        example: "5e77787d9d388471919abc70"
        description: "Id del registro"
      type:
        type: "string"
        default: "Point"
      coordinates:
        type: "array"
        maxItems: 2
        minItems: 2
        items:
          type: "number"
          
  polygonSchema:
    type: "object"
    description: "Definición geoJSON para un polígono"
    properties:
      _id: 
        type: "string"
        example: "5e77787d9d388471919abc70"
        description: "Id del registro"
      type:
        type: "string"
        default: "Polygon"
      coordinates:
        type: "array"
        maxItems: 1
        minItems: 1
        items:
          type: "array"
          maxItems: 1
          minItems: 1
          items:
            $ref: '#/definitions/pointSchema'        
securityDefinitions:
  bearerAuth:
    type: "apiKey"
    in: "header"
    name: "Authorization"
      
